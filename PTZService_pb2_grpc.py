# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import PTZService_pb2 as PTZService__pb2

GRPC_GENERATED_VERSION = '1.66.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in PTZService_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class PTZInterfaceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.init = channel.unary_unary(
                '/PTZRPC.PTZInterface/init',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.getVersion = channel.unary_unary(
                '/PTZRPC.PTZInterface/getVersion',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.Version.FromString,
                _registered_method=True)
        self.getBearingVal = channel.unary_unary(
                '/PTZRPC.PTZInterface/getBearingVal',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.PTZBearing.FromString,
                _registered_method=True)
        self.getPitchingVal = channel.unary_unary(
                '/PTZRPC.PTZInterface/getPitchingVal',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.PTZPitching.FromString,
                _registered_method=True)
        self.isBearingInplace = channel.unary_unary(
                '/PTZRPC.PTZInterface/isBearingInplace',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.isInplace.FromString,
                _registered_method=True)
        self.isPitchingInplace = channel.unary_unary(
                '/PTZRPC.PTZInterface/isPitchingInplace',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.isInplace.FromString,
                _registered_method=True)
        self.stop = channel.unary_unary(
                '/PTZRPC.PTZInterface/stop',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.down = channel.unary_unary(
                '/PTZRPC.PTZInterface/down',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.up = channel.unary_unary(
                '/PTZRPC.PTZInterface/up',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.left = channel.unary_unary(
                '/PTZRPC.PTZInterface/left',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.right = channel.unary_unary(
                '/PTZRPC.PTZInterface/right',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.upleft = channel.unary_unary(
                '/PTZRPC.PTZInterface/upleft',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.upright = channel.unary_unary(
                '/PTZRPC.PTZInterface/upright',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.downleft = channel.unary_unary(
                '/PTZRPC.PTZInterface/downleft',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.downright = channel.unary_unary(
                '/PTZRPC.PTZInterface/downright',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.setPositioningSpeed = channel.unary_unary(
                '/PTZRPC.PTZInterface/setPositioningSpeed',
                request_serializer=PTZService__pb2.PTZSpeed.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.setCruisingSpeed = channel.unary_unary(
                '/PTZRPC.PTZInterface/setCruisingSpeed',
                request_serializer=PTZService__pb2.PTZSpeed.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.setBearing = channel.unary_unary(
                '/PTZRPC.PTZInterface/setBearing',
                request_serializer=PTZService__pb2.PTZBearing.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.setPitching = channel.unary_unary(
                '/PTZRPC.PTZInterface/setPitching',
                request_serializer=PTZService__pb2.PTZPitching.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.setBearingandPitching = channel.unary_unary(
                '/PTZRPC.PTZInterface/setBearingandPitching',
                request_serializer=PTZService__pb2.PTZPose.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.setWiperOn = channel.unary_unary(
                '/PTZRPC.PTZInterface/setWiperOn',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.setWiperOff = channel.unary_unary(
                '/PTZRPC.PTZInterface/setWiperOff',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.setHeadlampOn = channel.unary_unary(
                '/PTZRPC.PTZInterface/setHeadlampOn',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.setHeadlampOff = channel.unary_unary(
                '/PTZRPC.PTZInterface/setHeadlampOff',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.setInitPosition = channel.unary_unary(
                '/PTZRPC.PTZInterface/setInitPosition',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.reboot = channel.unary_unary(
                '/PTZRPC.PTZInterface/reboot',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.setZoom = channel.unary_unary(
                '/PTZRPC.PTZInterface/setZoom',
                request_serializer=PTZService__pb2.VLZoom.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.setFocus = channel.unary_unary(
                '/PTZRPC.PTZInterface/setFocus',
                request_serializer=PTZService__pb2.VLFocus.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.isZoomInplace = channel.unary_unary(
                '/PTZRPC.PTZInterface/isZoomInplace',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.isInplace.FromString,
                _registered_method=True)
        self.isFocusInplace = channel.unary_unary(
                '/PTZRPC.PTZInterface/isFocusInplace',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.isInplace.FromString,
                _registered_method=True)
        self.getZoom = channel.unary_unary(
                '/PTZRPC.PTZInterface/getZoom',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.VLZoom.FromString,
                _registered_method=True)
        self.getFocus = channel.unary_unary(
                '/PTZRPC.PTZInterface/getFocus',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.VLFocus.FromString,
                _registered_method=True)
        self.zoomIn = channel.unary_unary(
                '/PTZRPC.PTZInterface/zoomIn',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.zoomOut = channel.unary_unary(
                '/PTZRPC.PTZInterface/zoomOut',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.zoomInStep = channel.unary_unary(
                '/PTZRPC.PTZInterface/zoomInStep',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.zoomOutStep = channel.unary_unary(
                '/PTZRPC.PTZInterface/zoomOutStep',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.focusIn = channel.unary_unary(
                '/PTZRPC.PTZInterface/focusIn',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.focusOut = channel.unary_unary(
                '/PTZRPC.PTZInterface/focusOut',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.setFocusManualMode = channel.unary_unary(
                '/PTZRPC.PTZInterface/setFocusManualMode',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)
        self.setFocusAutoMode = channel.unary_unary(
                '/PTZRPC.PTZInterface/setFocusAutoMode',
                request_serializer=PTZService__pb2.void_request.SerializeToString,
                response_deserializer=PTZService__pb2.void_reply.FromString,
                _registered_method=True)


class PTZInterfaceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getBearingVal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPitchingVal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isBearingInplace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isPitchingInplace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def down(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def up(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def left(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def right(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def upleft(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def upright(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def downleft(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def downright(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setPositioningSpeed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setCruisingSpeed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setBearing(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setPitching(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setBearingandPitching(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setWiperOn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setWiperOff(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setHeadlampOn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setHeadlampOff(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setInitPosition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def reboot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setZoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setFocus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isZoomInplace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isFocusInplace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getZoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getFocus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def zoomIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def zoomOut(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def zoomInStep(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def zoomOutStep(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def focusIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def focusOut(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setFocusManualMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setFocusAutoMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PTZInterfaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'init': grpc.unary_unary_rpc_method_handler(
                    servicer.init,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'getVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.getVersion,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.Version.SerializeToString,
            ),
            'getBearingVal': grpc.unary_unary_rpc_method_handler(
                    servicer.getBearingVal,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.PTZBearing.SerializeToString,
            ),
            'getPitchingVal': grpc.unary_unary_rpc_method_handler(
                    servicer.getPitchingVal,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.PTZPitching.SerializeToString,
            ),
            'isBearingInplace': grpc.unary_unary_rpc_method_handler(
                    servicer.isBearingInplace,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.isInplace.SerializeToString,
            ),
            'isPitchingInplace': grpc.unary_unary_rpc_method_handler(
                    servicer.isPitchingInplace,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.isInplace.SerializeToString,
            ),
            'stop': grpc.unary_unary_rpc_method_handler(
                    servicer.stop,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'down': grpc.unary_unary_rpc_method_handler(
                    servicer.down,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'up': grpc.unary_unary_rpc_method_handler(
                    servicer.up,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'left': grpc.unary_unary_rpc_method_handler(
                    servicer.left,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'right': grpc.unary_unary_rpc_method_handler(
                    servicer.right,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'upleft': grpc.unary_unary_rpc_method_handler(
                    servicer.upleft,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'upright': grpc.unary_unary_rpc_method_handler(
                    servicer.upright,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'downleft': grpc.unary_unary_rpc_method_handler(
                    servicer.downleft,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'downright': grpc.unary_unary_rpc_method_handler(
                    servicer.downright,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'setPositioningSpeed': grpc.unary_unary_rpc_method_handler(
                    servicer.setPositioningSpeed,
                    request_deserializer=PTZService__pb2.PTZSpeed.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'setCruisingSpeed': grpc.unary_unary_rpc_method_handler(
                    servicer.setCruisingSpeed,
                    request_deserializer=PTZService__pb2.PTZSpeed.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'setBearing': grpc.unary_unary_rpc_method_handler(
                    servicer.setBearing,
                    request_deserializer=PTZService__pb2.PTZBearing.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'setPitching': grpc.unary_unary_rpc_method_handler(
                    servicer.setPitching,
                    request_deserializer=PTZService__pb2.PTZPitching.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'setBearingandPitching': grpc.unary_unary_rpc_method_handler(
                    servicer.setBearingandPitching,
                    request_deserializer=PTZService__pb2.PTZPose.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'setWiperOn': grpc.unary_unary_rpc_method_handler(
                    servicer.setWiperOn,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'setWiperOff': grpc.unary_unary_rpc_method_handler(
                    servicer.setWiperOff,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'setHeadlampOn': grpc.unary_unary_rpc_method_handler(
                    servicer.setHeadlampOn,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'setHeadlampOff': grpc.unary_unary_rpc_method_handler(
                    servicer.setHeadlampOff,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'setInitPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.setInitPosition,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'reboot': grpc.unary_unary_rpc_method_handler(
                    servicer.reboot,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'setZoom': grpc.unary_unary_rpc_method_handler(
                    servicer.setZoom,
                    request_deserializer=PTZService__pb2.VLZoom.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'setFocus': grpc.unary_unary_rpc_method_handler(
                    servicer.setFocus,
                    request_deserializer=PTZService__pb2.VLFocus.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'isZoomInplace': grpc.unary_unary_rpc_method_handler(
                    servicer.isZoomInplace,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.isInplace.SerializeToString,
            ),
            'isFocusInplace': grpc.unary_unary_rpc_method_handler(
                    servicer.isFocusInplace,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.isInplace.SerializeToString,
            ),
            'getZoom': grpc.unary_unary_rpc_method_handler(
                    servicer.getZoom,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.VLZoom.SerializeToString,
            ),
            'getFocus': grpc.unary_unary_rpc_method_handler(
                    servicer.getFocus,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.VLFocus.SerializeToString,
            ),
            'zoomIn': grpc.unary_unary_rpc_method_handler(
                    servicer.zoomIn,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'zoomOut': grpc.unary_unary_rpc_method_handler(
                    servicer.zoomOut,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'zoomInStep': grpc.unary_unary_rpc_method_handler(
                    servicer.zoomInStep,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'zoomOutStep': grpc.unary_unary_rpc_method_handler(
                    servicer.zoomOutStep,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'focusIn': grpc.unary_unary_rpc_method_handler(
                    servicer.focusIn,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'focusOut': grpc.unary_unary_rpc_method_handler(
                    servicer.focusOut,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'setFocusManualMode': grpc.unary_unary_rpc_method_handler(
                    servicer.setFocusManualMode,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
            'setFocusAutoMode': grpc.unary_unary_rpc_method_handler(
                    servicer.setFocusAutoMode,
                    request_deserializer=PTZService__pb2.void_request.FromString,
                    response_serializer=PTZService__pb2.void_reply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'PTZRPC.PTZInterface', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('PTZRPC.PTZInterface', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PTZInterface(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/init',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/getVersion',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.Version.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getBearingVal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/getBearingVal',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.PTZBearing.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getPitchingVal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/getPitchingVal',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.PTZPitching.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isBearingInplace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/isBearingInplace',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.isInplace.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isPitchingInplace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/isPitchingInplace',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.isInplace.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/stop',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def down(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/down',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def up(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/up',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def left(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/left',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def right(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/right',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def upleft(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/upleft',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def upright(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/upright',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def downleft(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/downleft',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def downright(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/downright',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setPositioningSpeed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/setPositioningSpeed',
            PTZService__pb2.PTZSpeed.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setCruisingSpeed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/setCruisingSpeed',
            PTZService__pb2.PTZSpeed.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setBearing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/setBearing',
            PTZService__pb2.PTZBearing.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setPitching(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/setPitching',
            PTZService__pb2.PTZPitching.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setBearingandPitching(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/setBearingandPitching',
            PTZService__pb2.PTZPose.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setWiperOn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/setWiperOn',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setWiperOff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/setWiperOff',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setHeadlampOn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/setHeadlampOn',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setHeadlampOff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/setHeadlampOff',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setInitPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/setInitPosition',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def reboot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/reboot',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setZoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/setZoom',
            PTZService__pb2.VLZoom.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setFocus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/setFocus',
            PTZService__pb2.VLFocus.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isZoomInplace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/isZoomInplace',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.isInplace.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isFocusInplace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/isFocusInplace',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.isInplace.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getZoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/getZoom',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.VLZoom.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getFocus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/getFocus',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.VLFocus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def zoomIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/zoomIn',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def zoomOut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/zoomOut',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def zoomInStep(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/zoomInStep',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def zoomOutStep(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/zoomOutStep',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def focusIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/focusIn',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def focusOut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/focusOut',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setFocusManualMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/setFocusManualMode',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setFocusAutoMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PTZRPC.PTZInterface/setFocusAutoMode',
            PTZService__pb2.void_request.SerializeToString,
            PTZService__pb2.void_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
